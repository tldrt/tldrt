#!/bin/sh

# Usage info
show_help() {
cat << EOF
Usage: ${0##*/} [-hvp] [-d OUTPUT-DIRECTORY] [FILE]...
Generate TLDRT publish directory using FILE.

    -h          Display this help and exit.
    -d          Specify output directory.
    -p          Create output directory if it does not exist.
    -v          Verbose mode. Can be used multiple times for increased
                verbosity.
EOF
}

MAGICK_OCL_DEVICE=OFF

VERBOSE=0
PARENT=0
LOGO="res/stamp_6x13.png"

OPTIND=1 # Reset is necessary if getopts was used previously in the script.  It is a good idea to make this local in a function.
while getopts "hvpd:" opt; do
    case "$opt" in
        h)  show_help
            exit 0
            ;;
        v)  VERBOSE=$((VERBOSE+1))
            ;;
        p)  PARENT=1
            ;;
        d)  ODP=$OPTARG
            ;;
        '?')
            show_help >&2
            exit 1
            ;;
    esac
done
shift "$((OPTIND-1))" # Shift off the options and optional --.

#### PATH RESOLUTIONS
## Canonical Path to Working Directory
WDC=$(pwd)
## Path to Executable Directory
XDP=$(dirname -- "$0")
## Canonical Path to Executable Directory
XDC=`cd "$XDP"; pwd`
## Path to Input File
if [ -z ${1+x} ]; then
    echo "No input file provided."
    exit 1
fi
if [ ! -f "$1" ]
then
    echo "$1 does not exist or is not a regular file."
    exit 1
fi
IFP="$1"
## Path to Input Directory
IDP=$(dirname -- "$IFP")
## Canonical Path to Input Directory
IDC=`cd "$IDP"; pwd`
## Input File Basename
IFB=$(basename -- "$IFP")
## Canonical Path to Input File
IFC="${IDC}/${IFB}"
## Input File Name
IFN="${IFB%.*}"
## Input File Extension
IFE="${IFB##*.}"
## Input File Hash String
IFH=$(echo -n "$IFN" \
          | md5sum \
          | awk '{print substr($1,0,6)}')
## Path to Ouput Directory
if [ -z ${ODP+x} ]; then
    ODP="$IDP"
fi
## Ensure & Check Path to Ouput Directory
if [ $PARENT == 1 ]; then
    mkdir -p $ODP
fi
if [ ! -d "$ODP" ]
then
    echo "$ODP does not exist or is not a regular file."
    echo "Call with '-p' switch if you want to create directory."
    exit 1
fi
## Canonical Path to Ouput Directory
ODC=`cd "$ODP"; pwd`
## Canonical Path to Hash Directory
HDC="${ODC}/${IFH}"

## Report Path Resolutions
if [ $VERBOSE  == 1 ]; then
    echo "Canonical Path to Working Directory    : $WDC"
    echo "Path to Executable Directory           : $XDP"
    echo "Canonical Path to Executable Directory : $XDC"
    echo "Path to Input File                     : $IFP"
    echo "Path to Input Directory                : $IDP"
    echo "Canonical Path to Input Directory      : $IDC"
    echo "Input File Basename                    : $IFB"
    echo "Canonical Path to Input File           : $IFC"
    echo "Input File Name                        : $IFN"
    echo "Input File Extension                   : $IFE"
    echo "Input File Hash String                 : $IFH"
    echo "Path to Output Directory               : $IDP"
    echo "Canonical Path to Output Directory     : $IDC"
    echo "Canonical Path to Hash Directory       : $HDC"
fi
#### PATH RESOLUTIONS

echo "Creating $HDC directory."
mkdir -p $HDC

COLOR=$(echo "${IFH}" | tr 'a-z' 'A-Z')
echo "Creating STAMP at $HDC/images."
mkdir -p "$HDC/images"
convert -antialias -size 512x320 "$XDC/stamp_bg.png" \
        -stroke none -fill "#${COLOR}" \
        -draw "rectangle 208,80 304,176" \
        -font "$XDC/fonts/CatenaryStamp.ttf" \
        -kerning 40 -fill '#503050' \
        -pointsize 60 -gravity south \
        -draw "text 0,0 '#${COLOR}'" \
        "$HDC/images/${COLOR}.png"

echo "Copying media to $HDC."
## TODO!

echo "Creating DOCUMENT at $HDC."
TEXINPUTS=".:${HDC}:${XDC}//:" \
         pandoc -f markdown -t latex \
         --latex-engine=xelatex \
         --template "$XDC/tldrt.latex" \
         --variable hash="${COLOR}" \
         -o "${HDC}/${IFN}.pdf" "${IFC}"

## Required when running shell commands from inside LaTeX.
# --latex-engine-opt="--shell-escape" \
# --latex-engine-opt="--enable-write18" \

echo "Removing redundant directory $HDC/images."
rm -fr "$HDC/images"

echo "Creating THUMBNAIL at $HDC."
convert -antialias -density 240 "$HDC/${IFN}.pdf[0]" \
        -quality 90 -gravity north \
        -crop 1200x642+0+160 +repage \
        -resize 50% -flatten \
        "${XDC}/images/vignette.png" \
        -compose ColorBurn -composite \
        "${HDC}/thumbnail.png"

echo "Creating WRAPPER at $HDC."
# pandoc -f markdown -t html \
#        --template tldrt.html \
#        --variable hash="$HASH"
#        -o "$HASH/${FILENAME}.html" "${BASENAME}"

# End of file
